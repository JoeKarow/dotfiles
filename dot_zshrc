# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
# if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
#   source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
# fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# homebrew
export PATH="/usr/local/sbin:$PATH"
FPATH="/usr/local/share/zsh/site-functions:${FPATH}"

autoload -Uz compinit
compinit

# VSCode debug
export CHROME_EXECUTABLE="/Applications/Brave Browser.app/Contents/MacOS/Brave Browser"


# Setting for the new UTF-8 terminal support in Lion
LC_CTYPE=en_US.UTF-8
LC_ALL=en_US.UTF-8

export HOMEBREW_NO_ENV_HINTS=true

# 1Password SSH agent
# export SSH_AUTH_SOCK=~/Library/Group\ Containers/2BUA8C4S2C.com.1password/t/agent.sock
export SSH_AUTH_SOCK=~/.1password/agent.sock
# 1Password CLI
# eval "$(op completion zsh)"; compdef _op op
source /Users/joe/.config/op/plugins.sh

# Path to your oh-my-zsh installation.
# export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# ZSH_THEME="powerlevel10k/powerlevel10k"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 7

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
# plugins=(gitfast fnm gh iterm2 yarn colored-man-pages	)

## plugin parking lot ##

# zsh-interactive-cd

## end parking lot ##

# Plugin Options

# source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
export EDITOR="code --wait"
# export EDITOR=nano
export VISUAL="$EDITOR"

# tabtab source for packages
# uninstall by removing these lines
[[ -f ~/.config/tabtab/__tabtab.zsh ]] && . ~/.config/tabtab/__tabtab.zsh || true



export PATH="/usr/local/opt/tcl-tk/bin:$PATH"
export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
# add user level python bin to path
export PATH=$HOME/.local/bin:$PATH



# Load custom env vars

source "${HOME}/.env-zsh"

# GitHub local action runner 1password secrets injection

alias act='op run --no-masking --env-file=${HOME}/.act.secrets -- act -s GITHUB_TOKEN'
export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"


if [[ $TERM_PROGRAM != "WarpTerminal" ]]; then
##### WHAT YOU WANT TO DISABLE FOR WARP - BELOW
# iTerm2 integration
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
# # powerlevel10k update alias

# alias p10kupdate='git -C ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k pull'
# # To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
# [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

##### WHAT YOU WANT TO DISABLE FOR WARP - ABOVE
fi

# if [[ $TERM_PROGRAM == "WarpTerminal" ]]; then
eval "$(starship init zsh)"
# fi


# the fuck?!
# eval $(thefuck --alias --enable-experimental-instant-mode)

# fnm
# export PATH=/Users/joe/.fnm:$PATH
export PATH="/Users/joe/Library/Application Support/fnm:$PATH"
eval "$(fnm env --use-on-cd)"

# pnpm
export PNPM_HOME="/Users/joe/Library/pnpm"
export PATH="$PNPM_HOME:$PATH"
# pnpm end


# exa
alias ls="exa --icons -lhg --git"

# ssh tunnel for tunnel.joekarow.dev
alias tunnel='frpc -c ~/frpc.ini'

# replace cat with bat
alias cat='bat --italic-text always'

# typescript tracing
alias tsc-trace='tsc --incremental false --generateTrace ~/.trace && analyze-trace ~/.trace'
alias tsc-map='tsc --noEmit --listFiles | xargs stat -f "%z %N" | pnpm --package=webtreemap-cli dlx webtreemap'

alias itemSizes='du -h -d 1 | sort -h'

alias sentry='sentry-cli'

# eslint timing
export TIMING=1

. /usr/local/opt/asdf/libexec/asdf.sh

# keep at end - autocomplete init
autoload -U compinit; compinit

